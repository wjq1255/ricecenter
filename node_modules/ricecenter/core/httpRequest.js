/**
 * Created by Administrator on 2015/6/11.
 */
var http = require('http');


var httpRequest = function httpRequest() {
}
httpRequest.prototype._host = '';
httpRequest.prototype.host = function (host) {
    this._host = host;
    return this;
}

httpRequest.prototype._port = 80;
httpRequest.prototype.port = function (port) {
    this.port = port;
    return this;
}

httpRequest.prototype._path = '';
httpRequest.prototype.path = function (path) {
    this._path = path;
    return this;
}

httpRequest.prototype._method = 'GET';
httpRequest.prototype.method = function (method) {
    this._method = method;
    return this;
}

httpRequest.prototype.POST = function () {
    this._method = 'POST';
    return this;
}

httpRequest.prototype._body = null;
httpRequest.prototype.body = function (body) {
    this._body = body;
    return this;
}

httpRequest.prototype._onError = null;
httpRequest.prototype.onError = function (onError) {
    this._onError = onError;
    return this;
}

httpRequest.prototype._onAbnormalStatus = null;
httpRequest.prototype.onAbnormalStatus = function (onAbnormalStatus) {
    this._onAbnormalStatus = onAbnormalStatus;
    return this;
}

httpRequest.prototype._onReponse = null;
httpRequest.prototype.onReponse = function (onReponse) {
    this._onReponse = onReponse;
    return this;
}

httpRequest.prototype._timeout = 30;
httpRequest.prototype.timeout = function (timeout) {
    this._timeout = timeout;
    return this;
}

httpRequest.prototype.exec = function() {

    var options = {
        'host': this._host,
        'path': this._path,
        'port': this._port,
        'method': this._method,
        'headers': {
            'Content-Type': 'application/x-www-form-urlencoded',
            'Accept-Language': 'zh-cn',
            'Connection': 'Keep-Alive',
            'Cache-Control': 'no-cache',
            'User-Agent': 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)',
            'content-length': this._body ? this._body.length : 0
        }
    };

    var onData = this._onReponse;
    var ucReq = http.request(options, function (ucRes) {
        if (ucRes.statusCode != 200 && this._onAbnormalStatus) {
            this._onAbnormalStatus(ucRes);
        } else {
            if (onData) {
                ucRes.on('data', onData);
            }
        }
    });

    if (this._onError) {
        ucReq.on('error', this._onError);
    }

    ucReq.setTimeout(this._timeout);
    ucReq.write(this._body ? this._body : '');
    ucReq.end();
}

module.exports = httpRequest;