/**
 * Created by hadoop on 2015/6/12.
 */
var async = require('async');
var http = require('http');
var moment = require('moment')

var querystring = require('querystring');
var dbpool = require('../core/dbutil');
var config = require('../core/config')
var logger = require('../core/logger')
var resUtils = require('../core/resUtils');
var timeUtils = require('../core/timeUtils');
var crypto = require('../core/cryptoUtils');
var redisClient = require('../core/redisClient');

var common = {};

var UC_PID = config.UC_PID;
var UC_SECRET = config.UC_SECRET;
var USER_VCODE_RATE_PREFIX = 'STR_WIFI_VCODE_RATE_';
var USER_VCODE_DAY_PREFIX = 'STR_SCHOOL_WIFI_VCODE_';
var MD5KEY = 'www.anzhuoshangdian.com';

var PLATFORM = 1;
var BUSI_SKIP = new Error();
var BUSI_EXCEPTION = new Error();
var BREAK_FLAG = new Error();

var endResonse = resUtils.endResonse;
var returnjsondata = resUtils.returnjsondata;


var getConnection = function (context, callback) {
    dbpool.getConnection(function (err, connection) {
        context.conn = connection;
        if (err) {
            logger.getDebugLogger().error("" + err);
            return callback(err);
        }
        connection.beginTransaction(function (err) {
            if (err) {
                logger.getDebugLogger().error("" + err);
                return callback(err);
            }

            return callback(null);

        })
    })
};

var getConnectionExt = function (callback) {
    getConnection(null, callback)
};

var commit = function (connection, endBusi, endBusiWithException) {
    if (connection) {
        connection.commit(function (err) {
            if (err) {
                connection.rollback(function () {
                    connection.release();
                    if (endBusiWithException) {
                        endBusiWithException(err);
                    }
                });
            } else {
                connection.release();
                if (endBusi) {
                    endBusi();
                }
            }
        });
    } else {
        if (endBusi) {
            endBusi();
        }
    }
};

var rollback = function (connection) {
    if (connection) {
        connection.rollback(function () {
            connection.release();
        });
    }
};


/**
 * 游戏启动上报
 * @param uid
 * @param res
 */
common.reportgame = function(context,res){

    dbpool.getConnection(function (err, connection) {
        if (err) {
            logger.getDebugLogger().error("" + err);
            endResonse('500', '', res);
            return;
        }
        else
        {
            var param = [context.uid,context.androidid,context.gamekey,context.pkgname,context.appclientid,1];
            connection.query('insert into mk_app_opration (uid,androidid,gamekey,pkgname,type,platform,date) values(?,?,?,?,?,?,CURRENT_TIMESTAMP) ',param, function (err,ret) {
                if (err) {
                    connection.rollback(function () {
                        logger.getDebugLogger().error("" + err);
                        endResonse('500', '插入数据失败', res);
                        connection.release();
                        return;
                    });
                }
                else
                {
                    if(ret && ret.affectedRows == 1)
                    {
                        //endResonse('0','上报数据成功',res);
                        res.end('0');
                    }
                    else
                    {
                        //endResonse('0','插入数据失败',res);
                        res.end('1');
                    }

                    if (connection) {
                        connection.commit(function (err) {
                            if (err) {
                                connection.rollback(function () {
                                    connection.release();
                                });
                            }
                            else
                            {
                                connection.release();
                            }
                        });
                    }
                    return;
                }});
        }
    });
};

/**
 * 获取用户信息
 * @param req
 * @param res
 */
common.getuserinfo = function getuserinfo(req,res,callback){

    //logger.getDebugLogger().info('register response：22222');
    var uid = req.query.uid;
    var ckid = req.query.ckid;
    var sid = req.query.sid;
    var appclientid = req.query.appclientid;
    if (!appclientid || typeof(appclientid)=="undefined" && appclientid==0)
    {
        appclientid = 0;
    }
    var userinfo = {};
    userinfo.uid = '';
    if (!uid && typeof(uid)!="undefined" && uid!=0)
    {
        return callback(userinfo);
    }

    if(crypto.md5(ckid + uid + MD5KEY) != sid)
    {
        return callback(userinfo);
    }

    logger.getDebugLogger().debug("acquiringConnections:" + dbpool._acquiringConnections.length + " _freeConnections:" + dbpool._freeConnections.length + " _allConnections:" + dbpool._allConnections.length);

    dbpool.getConnection(function (err, connection) {
        if (err) {
            logger.getDebugLogger().error("获取数据库失败" + err);
            endResonse('500', '获取数据库失败', res);54
            if (connection) {
                connection.release();
            }
            return;
        }
        else
        {
            connection.query('select ph,integral,scid from mk_member where uid = ? and status = 1 and platform = ? limit 1',[uid,appclientid], function (err,rows) {
                if (err) {
                        logger.getDebugLogger().error("" + err);
                        endResonse('500', '数据库操作失败', res);
                        connection.release();
                        return callback(userinfo);
                }
                else
                {
                    connection.release();
                    if(rows && rows.length > 0)
                    {
                        userinfo = {uid:uid,sid:sid,ph:rows[0].ph,integral:rows[0].integral,platform:appclientid};
                        return callback(userinfo);
                    }
                    else
                    {
                        return callback(userinfo);
                    }
                }
            });
        }
    });
}
/**
 * 根据手机号获取用户信息
 * @param req
 * @param callback
 */
common.getuserinfobyph = function(req,res,callback){
    var ph = req.query.phone;
    var platform = req.query.appclientid;
    dbpool.getConnection(function (err, connection) {
        if (err) {
            logger.getDebugLogger().error("" + err);
            endResonse('500', '', res);
            connection.release();
            return;
        }
        else
        {
            connection.query('select uid,integral,scid from mk_member where ph = ? and status = 1 and platform = ? limit 1',[ph,platform], function (err,rows) {
                if (err) {
                    connection.rollback(function () {
                        logger.getDebugLogger().error("" + err);
                        endResonse('500', '查询数据失败', res);
                        connection.release();
                        return callback();
                    });
                }
                else
                {
                    if(connection)
                    {
                        connection.release();
                    }

                    var userinfo = {};
                    if(rows && rows.length > 0)
                    {
                        userinfo = {uid:rows[0].uid,sid:rows[0],ph:ph,integral:rows[0].integral,platform:platform};
                    }
                    else
                    {
                        userinfo = {uid:'',sid:'',ph:'',integral:0,platform:platform};
                    }

                    return callback(userinfo);
                }
            });
        }
    });
}


/**
 * 获取分享url
 * @param context
 * @param res
 */
common.getshareUrl = function(context,res){

    async.waterfall([function(callback){
        getConnection(context,callback);
    },
    function(callback){
        context.conn.query('select content,url,shortaddr from mk_activity_url where id = ? ',[context.appclientid],function(err,rows){
            if(err)
            {
                rollback(context.conn);
                return endResonse('1','查询数据库失败',res);
            }
            else
            {
                context.conn.release();
                return returnjsondata(res,rows[0]);
            }
        });
    }]);
}

/**
 * 判断用户是否启动游戏
 */
common.isStartGame = function(context,connection,res,callback)
{
            var param = [context.userinfo.uid,new moment().format('YYYY-MM-DD') + ' 00:00:00',new moment().format('YYYY-MM-DD') + ' 23:59:59',context.userinfo.platform];
            connection.query('select count(*) count from mk_app_opration where uid = ? and date > ? and date < ? and platform = ? limit 1', param, function (err,rows) {
                if (err) {
                        logger.getDebugLogger().error("" + err);
                        endResonse('500', '查询数据库失败', res);
                        callback(false);
                }
                else
                {
                    if(rows && rows[0].count > 0)
                    {
                        context.isstartgame = true;
                        callback(null);
                    }
                    else
                    {
                        context.isstartgame = false;
                        callback(null);
                    }
                }
            });
};

/**
 * 获取今日未启动的游戏
 * @param context
 * @param res
 */
common.queryunstartgame = function(context,res) {
    dbpool.getConnection(function (err, connection) {
        if (err) {
            logger.getDebugLogger().error("获取数据库连接失败" + err);
            endResonse('500', '获取数据库连接失败', res);
            if(connection)
            {
                connection.release();
            }
            return;
        }
        else {
            var param = [context.androidid,context.platform,new moment().format('YYYY-MM-DD')+' 00:00:00',new moment().format('YYYY-MM-DD') + ' 23:59:59'];
            connection.query('select distinct gamekey from mk_app_opration where androidid = ? and platform = ? and date >= ? and date <= ? ',param, function (err, rows) {
                if (err) {
                    logger.getDebugLogger().error("查询数据失败" + err);
                    endResonse(500, '查询数据失败', res);
                    connection.release();
                    return;
                }
                else
                {
                    if(context.applist.length > 0)
                    {
                        if(rows && rows.length > 0)
                        {
                            var result = Array();
                            for(var i = 0; i< context.applist.length; i++)
                            {
                                var status = 0;
                                for(var j = 0; j < rows.length;j++)
                                {
                                    if(context.applist[i] == rows[j].gamekey)
                                    {
                                        status = 1;
                                        break;
                                    }
                                }
                                if(status == 0)
                                {
                                    result.push(context.applist[i]);
                                }
                            }
                            var data = {};
                            data.error = 0;
                            data.msg = '成功';
                            data.data=JSON.parse(JSON.stringify(result));
                            returnjsondata(res,data);
                            connection.release();
                            return;
                        }
                        else
                        {
                            var data = {};
                            data.error = 0;
                            data.msg = '成功';
                            data.data=JSON.parse(JSON.stringify(context.applist));
                            returnjsondata(res,data);
                            connection.release();
                            return;
                        }
                    }
                }
            });
        }
    });
}

module.exports=common;