/**
 * Created by hadoop on 2015/6/9.
 */


var async = require('async');
var http = require('http');
var moment = require('moment')

var querystring = require('querystring');
var dbpool = require('../core/dbutil');
var config = require('../core/config')
var logger = require('../core/logger')
var resUtils = require('../core/resUtils');
var timeUtils = require('../core/timeUtils');
var crypto = require('../core/cryptoUtils');
var redisClient = require('../core/redisClient');

var rice = {};

var UC_PID = config.UC_PID;
var UC_SECRET = config.UC_SECRET;
var USER_VCODE_RATE_PREFIX = 'STR_WIFI_VCODE_RATE_';
var USER_VCODE_DAY_PREFIX = 'STR_SCHOOL_WIFI_VCODE_';
var CRYPTO_SALT = "www.anzhuoshangdian.com";
var IMG_FILE_SERVER = 'http://imgs.anzhuoshangdian.com';

var PLATFORM = 1;
var BUSI_SKIP = new Error();
var BUSI_EXCEPTION = new Error();
var BREAK_FLAG = new Error();

var endResonse = resUtils.endResonse;

rice.exchangeIntegral = function(param,res){
    var type = param.type == 'new' ? 'newest' : 'hot';
    var offset = param.offset;
    var limit = param.limit;
    dbpool.getConnection(function (err, connection) {
        if (err) {
            logger.getDebugLogger().error("获取数据库连接异常" + err);
            endResonse('500', '获取数据库连接异常', res);
            return callback(BREAK_FLAG, '获取数据库连接异常');
        }
        var params = [type,offset,limit];

        connection.query("SELECT gid,title,descs,fvalue,price,gtype,icon,num,endtime  FROM mk_integral_goods WHERE status=1 order by ? limit ? , ? ",params, function(err,result){
            if (err) {
                connection.rollback(function () {
                    logger.getDebugLogger().error("数据库操作异常" + err);
                    endResonse('500', '数据库操作异常', res);
                    connection.release();
                    return callback(BREAK_FLAG, '数据库操作异常');
                });
            } else {
                connection.commit(function (err) {
                    if (err) {
                        connection.rollback(function () {
                            logger.getDebugLogger().error("数据库操作异常" + err);
                            endResonse('500', '数据库操作异常', res);
                            connection.release();
                            return callback(BREAK_FLAG, '数据库操作异常');
                        });
                    } else {
                        connection.release();
                        var ret = {'list':result,'desc':"查询成功"};
                        resUtils.endResonse(0, ret, res);
                        return;
                    }
                });
            }
        });
        connection.on('error', function(err) {
            resUtils.endResonse(201, 'error', res);
            return;
        });
    });
}

/**
 * 金米获取记录
 * @param param
 * @param res
 */
rice.integralrecord = function(param,res){

    dbpool.getConnection(function (err, connection) {
        if (err) {
            logger.getDebugLogger().error("获取数据库连接异常" + err);
            endResonse('500', '获取数据库连接异常', res);
            return callback(BREAK_FLAG, '获取数据库连接异常');
        }

        connection.query("select title,integral,addtime,taskid from mk_integral where uid = ? and inte_type = ? and taskid != 1001 order by addtime desc limit ? offset ?",param,function(err,result){
            if (err) {
                connection.rollback(function () {
                    logger.getDebugLogger().error("数据库操作异常" + err);
                    endResonse('500', '数据库操作异常', res);
                    connection.release();
                    return callback(BREAK_FLAG, '数据库操作异常');
                });
            } else {
                connection.commit(function (err) {
                    if (err) {
                        connection.rollback(function () {
                            logger.getDebugLogger().error("数据库操作异常" + err);
                            endResonse('500', '数据库操作异常', res);
                            connection.release();
                            return callback(BREAK_FLAG, '数据库操作异常');
                        });
                    } else {
                        connection.release();
                        var ret = {'list':result,'type':param.type};
                        resUtils.endResonse(0, ret, res);
                        return;
                    }
                });
            }
        });
    });
}

module.exports = rice;